/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.unix.script.ui;

import org.unix.script.manager.ScriptManager;
import org.unix.script.tasks.Interact_Item;
import org.unix.script.tasks.Teleport;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author 0x181
 */
public class ui_Teleport extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form ui_Teleport
     */
    public ui_Teleport() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        cbo_Mast = new javax.swing.JComboBox<>();
        cbo_Mast.addActionListener(this);
        jLabel3 = new javax.swing.JLabel();
        cbo_Tp = new javax.swing.JComboBox<>();
        jSeparator2 = new javax.swing.JSeparator();
        btn_AddTele = new javax.swing.JButton();
        btn_AddTele.addActionListener(this);

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setText("Select a Master Tab:");
        DefaultComboBoxModel<String> mListModel = new DefaultComboBoxModel<>();
        mListModel.addElement("Money Making");
        mListModel.addElement("Training");
        mListModel.addElement("Boss");
        mListModel.addElement("PKing");
        mListModel.addElement("Minigame");
        mListModel.addElement("Home");
        cbo_Mast.setModel(mListModel);

        jLabel3.setText("Select the Teleport:");

        MoneyMakingModel = new DefaultComboBoxModel<>();
        MoneyMakingModel.addElement("Rock Crabs");
        MoneyMakingModel.addElement("Chat Duels");
        MoneyMakingModel.addElement("Thieving");
        MoneyMakingModel.addElement("Voting");
        MoneyMakingModel.addElement("Skilling Tasks");
        MoneyMakingModel.addElement("Experiments");
        MoneyMakingModel.addElement("Slayer");
        MoneyMakingModel.addElement("Chompy Minigame");
        MoneyMakingModel.addElement("Bosses");
        MoneyMakingModel.addElement("Green Dragons");
        MoneyMakingModel.addElement("Fiyr Shades");
        MoneyMakingModel.addElement("Ankous");
        MoneyMakingModel.addElement("Nardah Mummies");
        MoneyMakingModel.addElement("Elder Chaos Druids");
        MoneyMakingModel.addElement("Task Scrolls");
        MoneyMakingModel.addElement("Lava/Frost Dragons");
        MoneyMakingModel.addElement("Impling Catching");
        MoneyMakingModel.addElement("Raids");
        MoneyMakingModel.addElement("Enormous Moles");
        MoneyMakingModel.addElement("Nightmares");
        MoneyMakingModel.addElement("Lava Chest");
        MoneyMakingModel.addElement("Rune Coins");
        MoneyMakingModel.addElement("Revenants");
        MoneyMakingModel.addElement("Kharzi Minigame");
        MoneyMakingModel.addElement("Nex");

        TrainingModel = new DefaultComboBoxModel<>();
        TrainingModel.addElement("[Cmb] Chicken");
        TrainingModel.addElement("[Cmb] Rock Crabs");
        TrainingModel.addElement("[Cmb] Hill Giants");
        TrainingModel.addElement("[Cmb] Desert Bandits");
        TrainingModel.addElement("[Cmb] Neitiznot Yaks");
        TrainingModel.addElement("[Cmb] Experiments");
        TrainingModel.addElement("[Cmb] Metal Dragons");
        TrainingModel.addElement("[Cmb] Vyrewatch");
        TrainingModel.addElement("[Slay] Taverly Dung");
        TrainingModel.addElement("[Slay] Brimhaven Dung");
        TrainingModel.addElement("[Slay] Slayer Tower");
        TrainingModel.addElement("[Slay] Fremennik Cave");
        TrainingModel.addElement("[Slay] Cave of Horrors");
        TrainingModel.addElement("[Slay] Dark Beasts");
        TrainingModel.addElement("[Slay] Stronghold Slay Cave");
        TrainingModel.addElement("[Slay] Skeletal Wyverns");
        TrainingModel.addElement("[Slay] Wyvern Cavern");
        TrainingModel.addElement("[Slay] Demonic Gorillas");
        TrainingModel.addElement("[Slay] Karuulm Dungeon");
        TrainingModel.addElement("[Slay] Kourend Catacombs");
        TrainingModel.addElement("[Slay] Vault of War");
        TrainingModel.addElement("[Wc] Seers Village");
        TrainingModel.addElement("[Wc] Hardwood Grove");
        TrainingModel.addElement("[Fish] Fishing Guild");
        TrainingModel.addElement("[Craft] Crafting Store");
        TrainingModel.addElement("[Mine] Varrock Mine");
        TrainingModel.addElement("[Mine] Al-Kharid Mine");
        TrainingModel.addElement("[Mine] Dwarven Mine");
        TrainingModel.addElement("[Mine] Desert Granite Mine");
        TrainingModel.addElement("[Mine] Lunar Gem Mine");
        TrainingModel.addElement("[Mine] Runite Rocks");
        TrainingModel.addElement("[Herb] Chaos Druids");
        TrainingModel.addElement("[Agil] Gnome Course");
        TrainingModel.addElement("[Agil] Barbarian Course");
        TrainingModel.addElement("[Agil] Wilderness Course");
        TrainingModel.addElement("[Agil] Draynor Course");
        TrainingModel.addElement("[Agil] Al-Kharid Course");
        TrainingModel.addElement("[Agil] Varrock Course");
        TrainingModel.addElement("[Agil] Canifis Course");
        TrainingModel.addElement("[Agil] Falador Course");
        TrainingModel.addElement("[Agil] Seers Course");
        TrainingModel.addElement("[Agil] Pollnivneach Course");
        TrainingModel.addElement("[Agil] Relleka Course");
        TrainingModel.addElement("[Agil] Ardougne Course");
        TrainingModel.addElement("[Thief] Edgeville Market");
        TrainingModel.addElement("[Thief] Rogue Chest");
        TrainingModel.addElement("[Farm] Falador Allotments");
        TrainingModel.addElement("[Farm] Catherby Allotments");
        TrainingModel.addElement("[Farm] Catherby Tree Patch");
        TrainingModel.addElement("[Farm] Brimhaven Patch");
        TrainingModel.addElement("[Farm] Gnome Village Tree Patch");
        TrainingModel.addElement("[Farm] Gnome Strong Tree Patch");
        TrainingModel.addElement("[RC] Air Altar");
        TrainingModel.addElement("[RC] Mind Altar");
        TrainingModel.addElement("[RC] Water Altar");
        TrainingModel.addElement("[RC] Earth Altar");
        TrainingModel.addElement("[RC] Fire Altar");
        TrainingModel.addElement("[RC] Body Altar");
        TrainingModel.addElement("[RC] Cosmic Altar");
        TrainingModel.addElement("[RC] Chaos Altar");
        TrainingModel.addElement("[RC] Astral Altar");
        TrainingModel.addElement("[RC] Nature Altar");
        TrainingModel.addElement("[RC] Law Altar");
        TrainingModel.addElement("[RC] Death Altar");
        TrainingModel.addElement("[Con] House Teleport");
        TrainingModel.addElement("[Hunt] Crimson Swift");
        TrainingModel.addElement("[Hunt] Tropical Wagtail");
        TrainingModel.addElement("[Hunt] Red Chinchompa");
        TrainingModel.addElement("[Hunt] Black Chinchompa");
        TrainingModel.addElement("[Hunt] Puro Puro");
        TrainingModel.addElement("[Summ] Summoning Cave");
        TrainingModel.addElement("[Other] Barb Training");
        TrainingModel.addElement("[Other] Skilling Task");
        TrainingModel.addElement("[Other] Achievement Guild");
        TrainingModel.addElement("[Other] Max Guild");
        TrainingModel.addElement("[Other] Cavern of Prosperity");

        BossModel = new DefaultComboBoxModel<>();
        BossModel.addElement("God Wars Dungeon");
        BossModel.addElement("Kalaphite Queen");
        BossModel.addElement("Giant Mole");
        BossModel.addElement("Dagannoth Lair");
        BossModel.addElement("Zulrah");
        BossModel.addElement("Cerberus");
        BossModel.addElement("Kraken");
        BossModel.addElement("Corporeal Beast");
        BossModel.addElement("Lizard Shaman");
        BossModel.addElement("Therm. Smoke Devil");
        BossModel.addElement("Alchemical Hydra");
        BossModel.addElement("Abyssal Sire");
        BossModel.addElement("Vorkath");
        BossModel.addElement("The Nightmare");
        BossModel.addElement("Nex");

        PKModel = new DefaultComboBoxModel<>();
        PKModel.addElement("Training Grounds");
        PKModel.addElement("Mage Arena");
        PKModel.addElement("Revenant Caves");
        PKModel.addElement("Cursed Cavern");
        PKModel.addElement("King Black Dragon");
        PKModel.addElement("Chaos Elemental");
        PKModel.addElement("Vet'ion");
        PKModel.addElement("Venenatis");
        PKModel.addElement("Callisto");
        PKModel.addElement("Scorpia");
        PKModel.addElement("Crazy Archeologist");
        PKModel.addElement("Rogue Castle");

        MinigameModel = new DefaultComboBoxModel<>();
        MinigameModel.addElement("Fight Caves");
        MinigameModel.addElement("Warriors Guild");
        MinigameModel.addElement("Chompy Hunting");
        MinigameModel.addElement("Kharzi Jungle");
        MinigameModel.addElement("Barrows");
        MinigameModel.addElement("Mage Arena");
        MinigameModel.addElement("Gambling");
        MinigameModel.addElement("Duel Arena");

        HomeModel = new DefaultComboBoxModel<>();
        HomeModel.addElement("Home");

        cbo_Tp.setModel(MoneyMakingModel);

        btn_AddTele.setText("Add");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jSeparator2)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(cbo_Tp, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addComponent(jSeparator1)
                                                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel2)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(cbo_Mast, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
                        .addGroup(layout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addComponent(btn_AddTele)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(cbo_Mast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(cbo_Tp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_AddTele)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_AddTele;
    private javax.swing.JComboBox<String> cbo_Mast;
    private javax.swing.JComboBox<String> cbo_Tp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;

    DefaultComboBoxModel<String> MoneyMakingModel;
    DefaultComboBoxModel<String> TrainingModel;
    DefaultComboBoxModel<String> BossModel;
    DefaultComboBoxModel<String> PKModel;
    DefaultComboBoxModel<String> MinigameModel;
    DefaultComboBoxModel<String> HomeModel;

    @Override
    public void actionPerformed(ActionEvent e) {
        Object o = e.getSource();

        if (o.equals(cbo_Mast)) {
            if (cbo_Mast.getSelectedIndex() == 0) { cbo_Tp.setModel(MoneyMakingModel); }
            if (cbo_Mast.getSelectedIndex() == 1) { cbo_Tp.setModel(TrainingModel); }
            if (cbo_Mast.getSelectedIndex() == 2) { cbo_Tp.setModel(BossModel); }
            if (cbo_Mast.getSelectedIndex() == 3) { cbo_Tp.setModel(PKModel); }
            if (cbo_Mast.getSelectedIndex() == 4) { cbo_Tp.setModel(MinigameModel); }
            if (cbo_Mast.getSelectedIndex() == 5) { cbo_Tp.setModel(HomeModel); }
        }

        if (o.equals(btn_AddTele)) {
            String tpString = cbo_Tp.getSelectedItem().toString();
            if (tpString.contains("] ")) {
                tpString = tpString.split("] ")[1];
            }
            ScriptManager.addTask(new Teleport(cbo_Mast.getSelectedItem().toString(), tpString));
            SetupUI.taskListModel.addElement("[TELE] " + cbo_Mast.getSelectedItem().toString() + ", " + tpString);
            SetupUI.list_Tasks.updateUI();
            SetupUI.subMenuOpen = false;
            this.dispose();
        }
    }
    // End of variables declaration//GEN-END:variables
}
